// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user               User      @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
  @@index([userId], name:"userId")
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId], name:"userId")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  Game  Game[]
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

enum GameType {
  moq
  open_ended
}

model TopicCount {
 id  String @id @default(uuid())
  topic String @unique
  count Int
}

model Game {
  id  String @id @default(uuid())
  userId String
  timeStarted DateTime
  topic String
  timeEnded DateTime?
  gameType GameType
  user User @relation(fields: [userId],references: [id], onDelete: Cascade)
  questions Question[]
  @@index([userId],name: "userId")
}

model Question{
   id  String @id @default(uuid())
   question String
   answer String
   gameId String
   options Json? //for moq question
   percentageCurrent Float? //for open ended question
   isCorrect         Boolean? // for mcq questions
   questionType GameType
   userAnswer String? //for moq questions
   game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)
   @@index([gameId], name: "gameId")
}
